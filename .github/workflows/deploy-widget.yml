name: Build and Deploy Widget and Public Routes

on:
  push:
    paths:
      - 'apps/widget/**'
      - 'apps/public/**'
      - 'apps/admin/**'
      - 'apps/server/**'
      - 'packages/**'
    branches:
      - main

jobs:
  build-and-deploy-widget:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source repo
        uses: actions/checkout@v3

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: |
          bun install

      - name: Build widget
        run: |
          bun run build:widget

      - name: Copy dist to temp dir
        run: |
          rm -rf /tmp/widget-dist
          cp -r apps/widget/dist /tmp/widget-dist

      - name: Checkout public repo
        uses: actions/checkout@v3
        with:
          repository: codesbyayush/widget
          token: ${{ secrets.WIDGET_GH_ACTION }}
          path: public-repo

      - name: Copy built files to public repo
        run: |
          rm -rf public-repo/docs
          mkdir -p public-repo/docs
          cp -r /tmp/widget-dist/* public-repo/docs/

      - name: Commit and push to public repo
        run: |
          cd public-repo
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Deploy widget from private repo [skip ci]" || echo "No changes to commit"
          git push

  build-and-deploy-public:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source repo
        uses: actions/checkout@v3

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: |
          bun install

      - name: Build public routes
        run: |
          echo "PUBLIC_BACKEND_SERVER_URL=${{ secrets.BACKEND_URL }}" >> apps/public/.env.production
          echo "PUBLIC_ADMIN_URL=${{ secrets.ADMIN_URL }}" >> apps/public/.env.production
          echo "PUBLIC_ROOT_HOST=${{ secrets.ROOT_HOST }}" >> apps/public/.env.production
          echo "PUBLIC_ADMIN_ROOT_URL=${{ secrets.ADMIN_ROOT_URL }}" >> apps/public/.env.production
          bun run build:public

      - name: Deploy to Cloudflare Workers
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy
          packageManager: bun
          workingDirectory: apps/public

  build-and-deploy-admin:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source repo
        uses: actions/checkout@v3

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: |
          bun install

      - name: Build admin routes
        run: |
          echo "PUBLIC_BACKEND_SERVER_URL=${{ secrets.BACKEND_URL }}" >> apps/admin/.env.production
          bun run build:admin

      - name: Deploy to Cloudflare Workers
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy
          packageManager: bun
          workingDirectory: apps/admin

  deploy-server:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source repo
        uses: actions/checkout@v3

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: |
          bun install

      - name: Build server
        run: |
          bun run build:server

      - name: Run DB migrations
        run: |
          bun run db:migrate
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Deploy to Cloudflare Workers
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy
          packageManager: bun
          workingDirectory: apps/server
          secrets: |
            DATABASE_URL
            BETTER_AUTH_URL
            BETTER_AUTH_SECRET
            GOOGLE_CLIENT_ID
            GOOGLE_CLIENT_SECRET
            CORS_ORIGIN
            FRONTEND_URL
            RESEND_DOMAIN_KEY
            GH_APP_ID
            GH_PRIVATE_KEY
            GH_WEBHOOK_SECRET
            GH_APP_NAME
            NODE_ENV
        env: 
          BETTER_AUTH_URL: ${{ secrets.BETTER_AUTH_URL }}
          BETTER_AUTH_SECRET: ${{ secrets.BETTER_AUTH_SECRET }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          CORS_ORIGIN: ${{ secrets.CORS_ORIGIN }}
          FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
          RESEND_DOMAIN_KEY: ${{ secrets.RESEND_DOMAIN_KEY }}
          GH_APP_ID: ${{ secrets.GH_APP_ID }}
          GH_PRIVATE_KEY: ${{ secrets.GH_PRIVATE_KEY }}
          GH_WEBHOOK_SECRET: ${{ secrets.GH_WEBHOOK_SECRET }}
          GH_APP_NAME: ${{ secrets.GH_APP_NAME }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NODE_ENV: production