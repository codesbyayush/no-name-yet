/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as AdminRouteImport } from './routes/_admin'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AdminWikiRouteImport } from './routes/_admin/wiki'
import { Route as AdminWidgetRouteImport } from './routes/_admin/widget'
import { Route as AdminOnboardingRouteImport } from './routes/_admin/onboarding'
import { Route as AdminEditorRouteImport } from './routes/_admin/editor'
import { Route as AdminBoardsRouteImport } from './routes/_admin/boards'
import { Route as AdminSettingsIndexRouteImport } from './routes/_admin/settings/index'
import { Route as AdminChangelogsIndexRouteImport } from './routes/_admin/changelogs/index'
import { Route as AdminSettingsGeneralRouteImport } from './routes/_admin/settings/general'
import { Route as AdminChangelogsNewRouteImport } from './routes/_admin/changelogs/new'
import { Route as AdminChangelogsEditIdRouteImport } from './routes/_admin/changelogs/edit.$id'

const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRoute = AdminRouteImport.update({
  id: '/_admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminWikiRoute = AdminWikiRouteImport.update({
  id: '/wiki',
  path: '/wiki',
  getParentRoute: () => AdminRoute,
} as any)
const AdminWidgetRoute = AdminWidgetRouteImport.update({
  id: '/widget',
  path: '/widget',
  getParentRoute: () => AdminRoute,
} as any)
const AdminOnboardingRoute = AdminOnboardingRouteImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => AdminRoute,
} as any)
const AdminEditorRoute = AdminEditorRouteImport.update({
  id: '/editor',
  path: '/editor',
  getParentRoute: () => AdminRoute,
} as any)
const AdminBoardsRoute = AdminBoardsRouteImport.update({
  id: '/boards',
  path: '/boards',
  getParentRoute: () => AdminRoute,
} as any)
const AdminSettingsIndexRoute = AdminSettingsIndexRouteImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => AdminRoute,
} as any)
const AdminChangelogsIndexRoute = AdminChangelogsIndexRouteImport.update({
  id: '/changelogs/',
  path: '/changelogs/',
  getParentRoute: () => AdminRoute,
} as any)
const AdminSettingsGeneralRoute = AdminSettingsGeneralRouteImport.update({
  id: '/settings/general',
  path: '/settings/general',
  getParentRoute: () => AdminRoute,
} as any)
const AdminChangelogsNewRoute = AdminChangelogsNewRouteImport.update({
  id: '/changelogs/new',
  path: '/changelogs/new',
  getParentRoute: () => AdminRoute,
} as any)
const AdminChangelogsEditIdRoute = AdminChangelogsEditIdRouteImport.update({
  id: '/changelogs/edit/$id',
  path: '/changelogs/edit/$id',
  getParentRoute: () => AdminRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRoute
  '/boards': typeof AdminBoardsRoute
  '/editor': typeof AdminEditorRoute
  '/onboarding': typeof AdminOnboardingRoute
  '/widget': typeof AdminWidgetRoute
  '/wiki': typeof AdminWikiRoute
  '/changelogs/new': typeof AdminChangelogsNewRoute
  '/settings/general': typeof AdminSettingsGeneralRoute
  '/changelogs': typeof AdminChangelogsIndexRoute
  '/settings': typeof AdminSettingsIndexRoute
  '/changelogs/edit/$id': typeof AdminChangelogsEditIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRoute
  '/boards': typeof AdminBoardsRoute
  '/editor': typeof AdminEditorRoute
  '/onboarding': typeof AdminOnboardingRoute
  '/widget': typeof AdminWidgetRoute
  '/wiki': typeof AdminWikiRoute
  '/changelogs/new': typeof AdminChangelogsNewRoute
  '/settings/general': typeof AdminSettingsGeneralRoute
  '/changelogs': typeof AdminChangelogsIndexRoute
  '/settings': typeof AdminSettingsIndexRoute
  '/changelogs/edit/$id': typeof AdminChangelogsEditIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_admin': typeof AdminRouteWithChildren
  '/auth': typeof AuthRoute
  '/_admin/boards': typeof AdminBoardsRoute
  '/_admin/editor': typeof AdminEditorRoute
  '/_admin/onboarding': typeof AdminOnboardingRoute
  '/_admin/widget': typeof AdminWidgetRoute
  '/_admin/wiki': typeof AdminWikiRoute
  '/_admin/changelogs/new': typeof AdminChangelogsNewRoute
  '/_admin/settings/general': typeof AdminSettingsGeneralRoute
  '/_admin/changelogs/': typeof AdminChangelogsIndexRoute
  '/_admin/settings/': typeof AdminSettingsIndexRoute
  '/_admin/changelogs/edit/$id': typeof AdminChangelogsEditIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/boards'
    | '/editor'
    | '/onboarding'
    | '/widget'
    | '/wiki'
    | '/changelogs/new'
    | '/settings/general'
    | '/changelogs'
    | '/settings'
    | '/changelogs/edit/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/boards'
    | '/editor'
    | '/onboarding'
    | '/widget'
    | '/wiki'
    | '/changelogs/new'
    | '/settings/general'
    | '/changelogs'
    | '/settings'
    | '/changelogs/edit/$id'
  id:
    | '__root__'
    | '/'
    | '/_admin'
    | '/auth'
    | '/_admin/boards'
    | '/_admin/editor'
    | '/_admin/onboarding'
    | '/_admin/widget'
    | '/_admin/wiki'
    | '/_admin/changelogs/new'
    | '/_admin/settings/general'
    | '/_admin/changelogs/'
    | '/_admin/settings/'
    | '/_admin/changelogs/edit/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRouteWithChildren
  AuthRoute: typeof AuthRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_admin': {
      id: '/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_admin/wiki': {
      id: '/_admin/wiki'
      path: '/wiki'
      fullPath: '/wiki'
      preLoaderRoute: typeof AdminWikiRouteImport
      parentRoute: typeof AdminRoute
    }
    '/_admin/widget': {
      id: '/_admin/widget'
      path: '/widget'
      fullPath: '/widget'
      preLoaderRoute: typeof AdminWidgetRouteImport
      parentRoute: typeof AdminRoute
    }
    '/_admin/onboarding': {
      id: '/_admin/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof AdminOnboardingRouteImport
      parentRoute: typeof AdminRoute
    }
    '/_admin/editor': {
      id: '/_admin/editor'
      path: '/editor'
      fullPath: '/editor'
      preLoaderRoute: typeof AdminEditorRouteImport
      parentRoute: typeof AdminRoute
    }
    '/_admin/boards': {
      id: '/_admin/boards'
      path: '/boards'
      fullPath: '/boards'
      preLoaderRoute: typeof AdminBoardsRouteImport
      parentRoute: typeof AdminRoute
    }
    '/_admin/settings/': {
      id: '/_admin/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AdminSettingsIndexRouteImport
      parentRoute: typeof AdminRoute
    }
    '/_admin/changelogs/': {
      id: '/_admin/changelogs/'
      path: '/changelogs'
      fullPath: '/changelogs'
      preLoaderRoute: typeof AdminChangelogsIndexRouteImport
      parentRoute: typeof AdminRoute
    }
    '/_admin/settings/general': {
      id: '/_admin/settings/general'
      path: '/settings/general'
      fullPath: '/settings/general'
      preLoaderRoute: typeof AdminSettingsGeneralRouteImport
      parentRoute: typeof AdminRoute
    }
    '/_admin/changelogs/new': {
      id: '/_admin/changelogs/new'
      path: '/changelogs/new'
      fullPath: '/changelogs/new'
      preLoaderRoute: typeof AdminChangelogsNewRouteImport
      parentRoute: typeof AdminRoute
    }
    '/_admin/changelogs/edit/$id': {
      id: '/_admin/changelogs/edit/$id'
      path: '/changelogs/edit/$id'
      fullPath: '/changelogs/edit/$id'
      preLoaderRoute: typeof AdminChangelogsEditIdRouteImport
      parentRoute: typeof AdminRoute
    }
  }
}

interface AdminRouteChildren {
  AdminBoardsRoute: typeof AdminBoardsRoute
  AdminEditorRoute: typeof AdminEditorRoute
  AdminOnboardingRoute: typeof AdminOnboardingRoute
  AdminWidgetRoute: typeof AdminWidgetRoute
  AdminWikiRoute: typeof AdminWikiRoute
  AdminChangelogsNewRoute: typeof AdminChangelogsNewRoute
  AdminSettingsGeneralRoute: typeof AdminSettingsGeneralRoute
  AdminChangelogsIndexRoute: typeof AdminChangelogsIndexRoute
  AdminSettingsIndexRoute: typeof AdminSettingsIndexRoute
  AdminChangelogsEditIdRoute: typeof AdminChangelogsEditIdRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminBoardsRoute: AdminBoardsRoute,
  AdminEditorRoute: AdminEditorRoute,
  AdminOnboardingRoute: AdminOnboardingRoute,
  AdminWidgetRoute: AdminWidgetRoute,
  AdminWikiRoute: AdminWikiRoute,
  AdminChangelogsNewRoute: AdminChangelogsNewRoute,
  AdminSettingsGeneralRoute: AdminSettingsGeneralRoute,
  AdminChangelogsIndexRoute: AdminChangelogsIndexRoute,
  AdminSettingsIndexRoute: AdminSettingsIndexRoute,
  AdminChangelogsEditIdRoute: AdminChangelogsEditIdRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRouteWithChildren,
  AuthRoute: AuthRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
