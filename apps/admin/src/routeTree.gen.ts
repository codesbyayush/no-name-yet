/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AdminRouteImport } from './routes/_admin'
import { Route as IndexRouteImport } from './routes/index'
import { Route as OnboardingIndexRouteImport } from './routes/onboarding/index'
import { Route as AuthIndexRouteImport } from './routes/auth/index'
import { Route as AdminWidgetRouteImport } from './routes/_admin/widget'
import { Route as AdminSettingsRouteImport } from './routes/_admin/settings'
import { Route as AdminEditorRouteImport } from './routes/_admin/editor'
import { Route as AdminBoardsIndexRouteImport } from './routes/_admin/boards/index'
import { Route as AdminSettingsPricingRouteImport } from './routes/_admin/settings/pricing'
import { Route as AdminSettingsMembersRouteImport } from './routes/_admin/settings/members'
import { Route as AdminSettingsGeneralRouteImport } from './routes/_admin/settings/general'
import { Route as AdminBoardsPostIdRouteImport } from './routes/_admin/boards/$postId'
import { Route as AdminSettingsIntegrationsIndexRouteImport } from './routes/_admin/settings/integrations/index'
import { Route as AdminSettingsIntegrationsGithubRouteImport } from './routes/_admin/settings/integrations/github'

const AdminRoute = AdminRouteImport.update({
  id: '/_admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingIndexRoute = OnboardingIndexRouteImport.update({
  id: '/onboarding/',
  path: '/onboarding/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/auth/',
  path: '/auth/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminWidgetRoute = AdminWidgetRouteImport.update({
  id: '/widget',
  path: '/widget',
  getParentRoute: () => AdminRoute,
} as any)
const AdminSettingsRoute = AdminSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AdminRoute,
} as any)
const AdminEditorRoute = AdminEditorRouteImport.update({
  id: '/editor',
  path: '/editor',
  getParentRoute: () => AdminRoute,
} as any)
const AdminBoardsIndexRoute = AdminBoardsIndexRouteImport.update({
  id: '/boards/',
  path: '/boards/',
  getParentRoute: () => AdminRoute,
} as any)
const AdminSettingsPricingRoute = AdminSettingsPricingRouteImport.update({
  id: '/pricing',
  path: '/pricing',
  getParentRoute: () => AdminSettingsRoute,
} as any)
const AdminSettingsMembersRoute = AdminSettingsMembersRouteImport.update({
  id: '/members',
  path: '/members',
  getParentRoute: () => AdminSettingsRoute,
} as any)
const AdminSettingsGeneralRoute = AdminSettingsGeneralRouteImport.update({
  id: '/general',
  path: '/general',
  getParentRoute: () => AdminSettingsRoute,
} as any)
const AdminBoardsPostIdRoute = AdminBoardsPostIdRouteImport.update({
  id: '/boards/$postId',
  path: '/boards/$postId',
  getParentRoute: () => AdminRoute,
} as any)
const AdminSettingsIntegrationsIndexRoute =
  AdminSettingsIntegrationsIndexRouteImport.update({
    id: '/integrations/',
    path: '/integrations/',
    getParentRoute: () => AdminSettingsRoute,
  } as any)
const AdminSettingsIntegrationsGithubRoute =
  AdminSettingsIntegrationsGithubRouteImport.update({
    id: '/integrations/github',
    path: '/integrations/github',
    getParentRoute: () => AdminSettingsRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/editor': typeof AdminEditorRoute
  '/settings': typeof AdminSettingsRouteWithChildren
  '/widget': typeof AdminWidgetRoute
  '/auth': typeof AuthIndexRoute
  '/onboarding': typeof OnboardingIndexRoute
  '/boards/$postId': typeof AdminBoardsPostIdRoute
  '/settings/general': typeof AdminSettingsGeneralRoute
  '/settings/members': typeof AdminSettingsMembersRoute
  '/settings/pricing': typeof AdminSettingsPricingRoute
  '/boards': typeof AdminBoardsIndexRoute
  '/settings/integrations/github': typeof AdminSettingsIntegrationsGithubRoute
  '/settings/integrations': typeof AdminSettingsIntegrationsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/editor': typeof AdminEditorRoute
  '/settings': typeof AdminSettingsRouteWithChildren
  '/widget': typeof AdminWidgetRoute
  '/auth': typeof AuthIndexRoute
  '/onboarding': typeof OnboardingIndexRoute
  '/boards/$postId': typeof AdminBoardsPostIdRoute
  '/settings/general': typeof AdminSettingsGeneralRoute
  '/settings/members': typeof AdminSettingsMembersRoute
  '/settings/pricing': typeof AdminSettingsPricingRoute
  '/boards': typeof AdminBoardsIndexRoute
  '/settings/integrations/github': typeof AdminSettingsIntegrationsGithubRoute
  '/settings/integrations': typeof AdminSettingsIntegrationsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_admin': typeof AdminRouteWithChildren
  '/_admin/editor': typeof AdminEditorRoute
  '/_admin/settings': typeof AdminSettingsRouteWithChildren
  '/_admin/widget': typeof AdminWidgetRoute
  '/auth/': typeof AuthIndexRoute
  '/onboarding/': typeof OnboardingIndexRoute
  '/_admin/boards/$postId': typeof AdminBoardsPostIdRoute
  '/_admin/settings/general': typeof AdminSettingsGeneralRoute
  '/_admin/settings/members': typeof AdminSettingsMembersRoute
  '/_admin/settings/pricing': typeof AdminSettingsPricingRoute
  '/_admin/boards/': typeof AdminBoardsIndexRoute
  '/_admin/settings/integrations/github': typeof AdminSettingsIntegrationsGithubRoute
  '/_admin/settings/integrations/': typeof AdminSettingsIntegrationsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/editor'
    | '/settings'
    | '/widget'
    | '/auth'
    | '/onboarding'
    | '/boards/$postId'
    | '/settings/general'
    | '/settings/members'
    | '/settings/pricing'
    | '/boards'
    | '/settings/integrations/github'
    | '/settings/integrations'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/editor'
    | '/settings'
    | '/widget'
    | '/auth'
    | '/onboarding'
    | '/boards/$postId'
    | '/settings/general'
    | '/settings/members'
    | '/settings/pricing'
    | '/boards'
    | '/settings/integrations/github'
    | '/settings/integrations'
  id:
    | '__root__'
    | '/'
    | '/_admin'
    | '/_admin/editor'
    | '/_admin/settings'
    | '/_admin/widget'
    | '/auth/'
    | '/onboarding/'
    | '/_admin/boards/$postId'
    | '/_admin/settings/general'
    | '/_admin/settings/members'
    | '/_admin/settings/pricing'
    | '/_admin/boards/'
    | '/_admin/settings/integrations/github'
    | '/_admin/settings/integrations/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRouteWithChildren
  AuthIndexRoute: typeof AuthIndexRoute
  OnboardingIndexRoute: typeof OnboardingIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_admin': {
      id: '/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/onboarding/': {
      id: '/onboarding/'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/': {
      id: '/auth/'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_admin/widget': {
      id: '/_admin/widget'
      path: '/widget'
      fullPath: '/widget'
      preLoaderRoute: typeof AdminWidgetRouteImport
      parentRoute: typeof AdminRoute
    }
    '/_admin/settings': {
      id: '/_admin/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AdminSettingsRouteImport
      parentRoute: typeof AdminRoute
    }
    '/_admin/editor': {
      id: '/_admin/editor'
      path: '/editor'
      fullPath: '/editor'
      preLoaderRoute: typeof AdminEditorRouteImport
      parentRoute: typeof AdminRoute
    }
    '/_admin/boards/': {
      id: '/_admin/boards/'
      path: '/boards'
      fullPath: '/boards'
      preLoaderRoute: typeof AdminBoardsIndexRouteImport
      parentRoute: typeof AdminRoute
    }
    '/_admin/settings/pricing': {
      id: '/_admin/settings/pricing'
      path: '/pricing'
      fullPath: '/settings/pricing'
      preLoaderRoute: typeof AdminSettingsPricingRouteImport
      parentRoute: typeof AdminSettingsRoute
    }
    '/_admin/settings/members': {
      id: '/_admin/settings/members'
      path: '/members'
      fullPath: '/settings/members'
      preLoaderRoute: typeof AdminSettingsMembersRouteImport
      parentRoute: typeof AdminSettingsRoute
    }
    '/_admin/settings/general': {
      id: '/_admin/settings/general'
      path: '/general'
      fullPath: '/settings/general'
      preLoaderRoute: typeof AdminSettingsGeneralRouteImport
      parentRoute: typeof AdminSettingsRoute
    }
    '/_admin/boards/$postId': {
      id: '/_admin/boards/$postId'
      path: '/boards/$postId'
      fullPath: '/boards/$postId'
      preLoaderRoute: typeof AdminBoardsPostIdRouteImport
      parentRoute: typeof AdminRoute
    }
    '/_admin/settings/integrations/': {
      id: '/_admin/settings/integrations/'
      path: '/integrations'
      fullPath: '/settings/integrations'
      preLoaderRoute: typeof AdminSettingsIntegrationsIndexRouteImport
      parentRoute: typeof AdminSettingsRoute
    }
    '/_admin/settings/integrations/github': {
      id: '/_admin/settings/integrations/github'
      path: '/integrations/github'
      fullPath: '/settings/integrations/github'
      preLoaderRoute: typeof AdminSettingsIntegrationsGithubRouteImport
      parentRoute: typeof AdminSettingsRoute
    }
  }
}

interface AdminSettingsRouteChildren {
  AdminSettingsGeneralRoute: typeof AdminSettingsGeneralRoute
  AdminSettingsMembersRoute: typeof AdminSettingsMembersRoute
  AdminSettingsPricingRoute: typeof AdminSettingsPricingRoute
  AdminSettingsIntegrationsGithubRoute: typeof AdminSettingsIntegrationsGithubRoute
  AdminSettingsIntegrationsIndexRoute: typeof AdminSettingsIntegrationsIndexRoute
}

const AdminSettingsRouteChildren: AdminSettingsRouteChildren = {
  AdminSettingsGeneralRoute: AdminSettingsGeneralRoute,
  AdminSettingsMembersRoute: AdminSettingsMembersRoute,
  AdminSettingsPricingRoute: AdminSettingsPricingRoute,
  AdminSettingsIntegrationsGithubRoute: AdminSettingsIntegrationsGithubRoute,
  AdminSettingsIntegrationsIndexRoute: AdminSettingsIntegrationsIndexRoute,
}

const AdminSettingsRouteWithChildren = AdminSettingsRoute._addFileChildren(
  AdminSettingsRouteChildren,
)

interface AdminRouteChildren {
  AdminEditorRoute: typeof AdminEditorRoute
  AdminSettingsRoute: typeof AdminSettingsRouteWithChildren
  AdminWidgetRoute: typeof AdminWidgetRoute
  AdminBoardsPostIdRoute: typeof AdminBoardsPostIdRoute
  AdminBoardsIndexRoute: typeof AdminBoardsIndexRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminEditorRoute: AdminEditorRoute,
  AdminSettingsRoute: AdminSettingsRouteWithChildren,
  AdminWidgetRoute: AdminWidgetRoute,
  AdminBoardsPostIdRoute: AdminBoardsPostIdRoute,
  AdminBoardsIndexRoute: AdminBoardsIndexRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRouteWithChildren,
  AuthIndexRoute: AuthIndexRoute,
  OnboardingIndexRoute: OnboardingIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
