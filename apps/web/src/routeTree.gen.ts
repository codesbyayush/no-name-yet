/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PublicImport } from './routes/public'
import { Route as OrpcImport } from './routes/orpc'
import { Route as OnboardingImport } from './routes/onboarding'
import { Route as LoginImport } from './routes/login'
import { Route as LandingImport } from './routes/landing'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as AdminImport } from './routes/admin'
import { Route as TenantSlugImport } from './routes/$tenantSlug'
import { Route as IndexImport } from './routes/index'
import { Route as PublicIndexImport } from './routes/public/index'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as TenantSlugIndexImport } from './routes/$tenantSlug/index'
import { Route as PublicRoadmapImport } from './routes/public/roadmap'
import { Route as PublicChangelogImport } from './routes/public/changelog'
import { Route as PublicBoardImport } from './routes/public/board'
import { Route as TenantSlugPublicImport } from './routes/$tenantSlug/public'
import { Route as TenantSlugAdminImport } from './routes/$tenantSlug/admin'
import { Route as PublicBoardIndexImport } from './routes/public/board/index'
import { Route as TenantSlugPublicIndexImport } from './routes/$tenantSlug/public/index'
import { Route as TenantSlugAdminIndexImport } from './routes/$tenantSlug/admin/index'
import { Route as PublicBoardFeedbackImport } from './routes/public/board/feedback'
import { Route as PublicBoardFeaturesImport } from './routes/public/board/features'
import { Route as PublicBoardBugsImport } from './routes/public/board/bugs'
import { Route as TenantSlugPublicRoadmapImport } from './routes/$tenantSlug/public/roadmap'
import { Route as TenantSlugPublicChangelogImport } from './routes/$tenantSlug/public/changelog'
import { Route as TenantSlugPublicBoardImport } from './routes/$tenantSlug/public/board'
import { Route as TenantSlugPublicBoardIndexImport } from './routes/$tenantSlug/public/board/index'
import { Route as TenantSlugPublicBoardFeedbackImport } from './routes/$tenantSlug/public/board/feedback'
import { Route as TenantSlugPublicBoardFeaturesImport } from './routes/$tenantSlug/public/board/features'
import { Route as TenantSlugPublicBoardBugsImport } from './routes/$tenantSlug/public/board/bugs'

// Create/Update Routes

const PublicRoute = PublicImport.update({
  id: '/public',
  path: '/public',
  getParentRoute: () => rootRoute,
} as any)

const OrpcRoute = OrpcImport.update({
  id: '/orpc',
  path: '/orpc',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingRoute = OnboardingImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const LandingRoute = LandingImport.update({
  id: '/landing',
  path: '/landing',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const TenantSlugRoute = TenantSlugImport.update({
  id: '/$tenantSlug',
  path: '/$tenantSlug',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PublicIndexRoute = PublicIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PublicRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRoute,
} as any)

const TenantSlugIndexRoute = TenantSlugIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TenantSlugRoute,
} as any)

const PublicRoadmapRoute = PublicRoadmapImport.update({
  id: '/roadmap',
  path: '/roadmap',
  getParentRoute: () => PublicRoute,
} as any)

const PublicChangelogRoute = PublicChangelogImport.update({
  id: '/changelog',
  path: '/changelog',
  getParentRoute: () => PublicRoute,
} as any)

const PublicBoardRoute = PublicBoardImport.update({
  id: '/board',
  path: '/board',
  getParentRoute: () => PublicRoute,
} as any)

const TenantSlugPublicRoute = TenantSlugPublicImport.update({
  id: '/public',
  path: '/public',
  getParentRoute: () => TenantSlugRoute,
} as any)

const TenantSlugAdminRoute = TenantSlugAdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => TenantSlugRoute,
} as any)

const PublicBoardIndexRoute = PublicBoardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PublicBoardRoute,
} as any)

const TenantSlugPublicIndexRoute = TenantSlugPublicIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TenantSlugPublicRoute,
} as any)

const TenantSlugAdminIndexRoute = TenantSlugAdminIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TenantSlugAdminRoute,
} as any)

const PublicBoardFeedbackRoute = PublicBoardFeedbackImport.update({
  id: '/feedback',
  path: '/feedback',
  getParentRoute: () => PublicBoardRoute,
} as any)

const PublicBoardFeaturesRoute = PublicBoardFeaturesImport.update({
  id: '/features',
  path: '/features',
  getParentRoute: () => PublicBoardRoute,
} as any)

const PublicBoardBugsRoute = PublicBoardBugsImport.update({
  id: '/bugs',
  path: '/bugs',
  getParentRoute: () => PublicBoardRoute,
} as any)

const TenantSlugPublicRoadmapRoute = TenantSlugPublicRoadmapImport.update({
  id: '/roadmap',
  path: '/roadmap',
  getParentRoute: () => TenantSlugPublicRoute,
} as any)

const TenantSlugPublicChangelogRoute = TenantSlugPublicChangelogImport.update({
  id: '/changelog',
  path: '/changelog',
  getParentRoute: () => TenantSlugPublicRoute,
} as any)

const TenantSlugPublicBoardRoute = TenantSlugPublicBoardImport.update({
  id: '/board',
  path: '/board',
  getParentRoute: () => TenantSlugPublicRoute,
} as any)

const TenantSlugPublicBoardIndexRoute = TenantSlugPublicBoardIndexImport.update(
  {
    id: '/',
    path: '/',
    getParentRoute: () => TenantSlugPublicBoardRoute,
  } as any,
)

const TenantSlugPublicBoardFeedbackRoute =
  TenantSlugPublicBoardFeedbackImport.update({
    id: '/feedback',
    path: '/feedback',
    getParentRoute: () => TenantSlugPublicBoardRoute,
  } as any)

const TenantSlugPublicBoardFeaturesRoute =
  TenantSlugPublicBoardFeaturesImport.update({
    id: '/features',
    path: '/features',
    getParentRoute: () => TenantSlugPublicBoardRoute,
  } as any)

const TenantSlugPublicBoardBugsRoute = TenantSlugPublicBoardBugsImport.update({
  id: '/bugs',
  path: '/bugs',
  getParentRoute: () => TenantSlugPublicBoardRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/$tenantSlug': {
      id: '/$tenantSlug'
      path: '/$tenantSlug'
      fullPath: '/$tenantSlug'
      preLoaderRoute: typeof TenantSlugImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/landing': {
      id: '/landing'
      path: '/landing'
      fullPath: '/landing'
      preLoaderRoute: typeof LandingImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/onboarding': {
      id: '/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingImport
      parentRoute: typeof rootRoute
    }
    '/orpc': {
      id: '/orpc'
      path: '/orpc'
      fullPath: '/orpc'
      preLoaderRoute: typeof OrpcImport
      parentRoute: typeof rootRoute
    }
    '/public': {
      id: '/public'
      path: '/public'
      fullPath: '/public'
      preLoaderRoute: typeof PublicImport
      parentRoute: typeof rootRoute
    }
    '/$tenantSlug/admin': {
      id: '/$tenantSlug/admin'
      path: '/admin'
      fullPath: '/$tenantSlug/admin'
      preLoaderRoute: typeof TenantSlugAdminImport
      parentRoute: typeof TenantSlugImport
    }
    '/$tenantSlug/public': {
      id: '/$tenantSlug/public'
      path: '/public'
      fullPath: '/$tenantSlug/public'
      preLoaderRoute: typeof TenantSlugPublicImport
      parentRoute: typeof TenantSlugImport
    }
    '/public/board': {
      id: '/public/board'
      path: '/board'
      fullPath: '/public/board'
      preLoaderRoute: typeof PublicBoardImport
      parentRoute: typeof PublicImport
    }
    '/public/changelog': {
      id: '/public/changelog'
      path: '/changelog'
      fullPath: '/public/changelog'
      preLoaderRoute: typeof PublicChangelogImport
      parentRoute: typeof PublicImport
    }
    '/public/roadmap': {
      id: '/public/roadmap'
      path: '/roadmap'
      fullPath: '/public/roadmap'
      preLoaderRoute: typeof PublicRoadmapImport
      parentRoute: typeof PublicImport
    }
    '/$tenantSlug/': {
      id: '/$tenantSlug/'
      path: '/'
      fullPath: '/$tenantSlug/'
      preLoaderRoute: typeof TenantSlugIndexImport
      parentRoute: typeof TenantSlugImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof AdminImport
    }
    '/public/': {
      id: '/public/'
      path: '/'
      fullPath: '/public/'
      preLoaderRoute: typeof PublicIndexImport
      parentRoute: typeof PublicImport
    }
    '/$tenantSlug/public/board': {
      id: '/$tenantSlug/public/board'
      path: '/board'
      fullPath: '/$tenantSlug/public/board'
      preLoaderRoute: typeof TenantSlugPublicBoardImport
      parentRoute: typeof TenantSlugPublicImport
    }
    '/$tenantSlug/public/changelog': {
      id: '/$tenantSlug/public/changelog'
      path: '/changelog'
      fullPath: '/$tenantSlug/public/changelog'
      preLoaderRoute: typeof TenantSlugPublicChangelogImport
      parentRoute: typeof TenantSlugPublicImport
    }
    '/$tenantSlug/public/roadmap': {
      id: '/$tenantSlug/public/roadmap'
      path: '/roadmap'
      fullPath: '/$tenantSlug/public/roadmap'
      preLoaderRoute: typeof TenantSlugPublicRoadmapImport
      parentRoute: typeof TenantSlugPublicImport
    }
    '/public/board/bugs': {
      id: '/public/board/bugs'
      path: '/bugs'
      fullPath: '/public/board/bugs'
      preLoaderRoute: typeof PublicBoardBugsImport
      parentRoute: typeof PublicBoardImport
    }
    '/public/board/features': {
      id: '/public/board/features'
      path: '/features'
      fullPath: '/public/board/features'
      preLoaderRoute: typeof PublicBoardFeaturesImport
      parentRoute: typeof PublicBoardImport
    }
    '/public/board/feedback': {
      id: '/public/board/feedback'
      path: '/feedback'
      fullPath: '/public/board/feedback'
      preLoaderRoute: typeof PublicBoardFeedbackImport
      parentRoute: typeof PublicBoardImport
    }
    '/$tenantSlug/admin/': {
      id: '/$tenantSlug/admin/'
      path: '/'
      fullPath: '/$tenantSlug/admin/'
      preLoaderRoute: typeof TenantSlugAdminIndexImport
      parentRoute: typeof TenantSlugAdminImport
    }
    '/$tenantSlug/public/': {
      id: '/$tenantSlug/public/'
      path: '/'
      fullPath: '/$tenantSlug/public/'
      preLoaderRoute: typeof TenantSlugPublicIndexImport
      parentRoute: typeof TenantSlugPublicImport
    }
    '/public/board/': {
      id: '/public/board/'
      path: '/'
      fullPath: '/public/board/'
      preLoaderRoute: typeof PublicBoardIndexImport
      parentRoute: typeof PublicBoardImport
    }
    '/$tenantSlug/public/board/bugs': {
      id: '/$tenantSlug/public/board/bugs'
      path: '/bugs'
      fullPath: '/$tenantSlug/public/board/bugs'
      preLoaderRoute: typeof TenantSlugPublicBoardBugsImport
      parentRoute: typeof TenantSlugPublicBoardImport
    }
    '/$tenantSlug/public/board/features': {
      id: '/$tenantSlug/public/board/features'
      path: '/features'
      fullPath: '/$tenantSlug/public/board/features'
      preLoaderRoute: typeof TenantSlugPublicBoardFeaturesImport
      parentRoute: typeof TenantSlugPublicBoardImport
    }
    '/$tenantSlug/public/board/feedback': {
      id: '/$tenantSlug/public/board/feedback'
      path: '/feedback'
      fullPath: '/$tenantSlug/public/board/feedback'
      preLoaderRoute: typeof TenantSlugPublicBoardFeedbackImport
      parentRoute: typeof TenantSlugPublicBoardImport
    }
    '/$tenantSlug/public/board/': {
      id: '/$tenantSlug/public/board/'
      path: '/'
      fullPath: '/$tenantSlug/public/board/'
      preLoaderRoute: typeof TenantSlugPublicBoardIndexImport
      parentRoute: typeof TenantSlugPublicBoardImport
    }
  }
}

// Create and export the route tree

interface TenantSlugAdminRouteChildren {
  TenantSlugAdminIndexRoute: typeof TenantSlugAdminIndexRoute
}

const TenantSlugAdminRouteChildren: TenantSlugAdminRouteChildren = {
  TenantSlugAdminIndexRoute: TenantSlugAdminIndexRoute,
}

const TenantSlugAdminRouteWithChildren = TenantSlugAdminRoute._addFileChildren(
  TenantSlugAdminRouteChildren,
)

interface TenantSlugPublicBoardRouteChildren {
  TenantSlugPublicBoardBugsRoute: typeof TenantSlugPublicBoardBugsRoute
  TenantSlugPublicBoardFeaturesRoute: typeof TenantSlugPublicBoardFeaturesRoute
  TenantSlugPublicBoardFeedbackRoute: typeof TenantSlugPublicBoardFeedbackRoute
  TenantSlugPublicBoardIndexRoute: typeof TenantSlugPublicBoardIndexRoute
}

const TenantSlugPublicBoardRouteChildren: TenantSlugPublicBoardRouteChildren = {
  TenantSlugPublicBoardBugsRoute: TenantSlugPublicBoardBugsRoute,
  TenantSlugPublicBoardFeaturesRoute: TenantSlugPublicBoardFeaturesRoute,
  TenantSlugPublicBoardFeedbackRoute: TenantSlugPublicBoardFeedbackRoute,
  TenantSlugPublicBoardIndexRoute: TenantSlugPublicBoardIndexRoute,
}

const TenantSlugPublicBoardRouteWithChildren =
  TenantSlugPublicBoardRoute._addFileChildren(
    TenantSlugPublicBoardRouteChildren,
  )

interface TenantSlugPublicRouteChildren {
  TenantSlugPublicBoardRoute: typeof TenantSlugPublicBoardRouteWithChildren
  TenantSlugPublicChangelogRoute: typeof TenantSlugPublicChangelogRoute
  TenantSlugPublicRoadmapRoute: typeof TenantSlugPublicRoadmapRoute
  TenantSlugPublicIndexRoute: typeof TenantSlugPublicIndexRoute
}

const TenantSlugPublicRouteChildren: TenantSlugPublicRouteChildren = {
  TenantSlugPublicBoardRoute: TenantSlugPublicBoardRouteWithChildren,
  TenantSlugPublicChangelogRoute: TenantSlugPublicChangelogRoute,
  TenantSlugPublicRoadmapRoute: TenantSlugPublicRoadmapRoute,
  TenantSlugPublicIndexRoute: TenantSlugPublicIndexRoute,
}

const TenantSlugPublicRouteWithChildren =
  TenantSlugPublicRoute._addFileChildren(TenantSlugPublicRouteChildren)

interface TenantSlugRouteChildren {
  TenantSlugAdminRoute: typeof TenantSlugAdminRouteWithChildren
  TenantSlugPublicRoute: typeof TenantSlugPublicRouteWithChildren
  TenantSlugIndexRoute: typeof TenantSlugIndexRoute
}

const TenantSlugRouteChildren: TenantSlugRouteChildren = {
  TenantSlugAdminRoute: TenantSlugAdminRouteWithChildren,
  TenantSlugPublicRoute: TenantSlugPublicRouteWithChildren,
  TenantSlugIndexRoute: TenantSlugIndexRoute,
}

const TenantSlugRouteWithChildren = TenantSlugRoute._addFileChildren(
  TenantSlugRouteChildren,
)

interface AdminRouteChildren {
  AdminIndexRoute: typeof AdminIndexRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminIndexRoute: AdminIndexRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

interface PublicBoardRouteChildren {
  PublicBoardBugsRoute: typeof PublicBoardBugsRoute
  PublicBoardFeaturesRoute: typeof PublicBoardFeaturesRoute
  PublicBoardFeedbackRoute: typeof PublicBoardFeedbackRoute
  PublicBoardIndexRoute: typeof PublicBoardIndexRoute
}

const PublicBoardRouteChildren: PublicBoardRouteChildren = {
  PublicBoardBugsRoute: PublicBoardBugsRoute,
  PublicBoardFeaturesRoute: PublicBoardFeaturesRoute,
  PublicBoardFeedbackRoute: PublicBoardFeedbackRoute,
  PublicBoardIndexRoute: PublicBoardIndexRoute,
}

const PublicBoardRouteWithChildren = PublicBoardRoute._addFileChildren(
  PublicBoardRouteChildren,
)

interface PublicRouteChildren {
  PublicBoardRoute: typeof PublicBoardRouteWithChildren
  PublicChangelogRoute: typeof PublicChangelogRoute
  PublicRoadmapRoute: typeof PublicRoadmapRoute
  PublicIndexRoute: typeof PublicIndexRoute
}

const PublicRouteChildren: PublicRouteChildren = {
  PublicBoardRoute: PublicBoardRouteWithChildren,
  PublicChangelogRoute: PublicChangelogRoute,
  PublicRoadmapRoute: PublicRoadmapRoute,
  PublicIndexRoute: PublicIndexRoute,
}

const PublicRouteWithChildren =
  PublicRoute._addFileChildren(PublicRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$tenantSlug': typeof TenantSlugRouteWithChildren
  '/admin': typeof AdminRouteWithChildren
  '/dashboard': typeof DashboardRoute
  '/landing': typeof LandingRoute
  '/login': typeof LoginRoute
  '/onboarding': typeof OnboardingRoute
  '/orpc': typeof OrpcRoute
  '/public': typeof PublicRouteWithChildren
  '/$tenantSlug/admin': typeof TenantSlugAdminRouteWithChildren
  '/$tenantSlug/public': typeof TenantSlugPublicRouteWithChildren
  '/public/board': typeof PublicBoardRouteWithChildren
  '/public/changelog': typeof PublicChangelogRoute
  '/public/roadmap': typeof PublicRoadmapRoute
  '/$tenantSlug/': typeof TenantSlugIndexRoute
  '/admin/': typeof AdminIndexRoute
  '/public/': typeof PublicIndexRoute
  '/$tenantSlug/public/board': typeof TenantSlugPublicBoardRouteWithChildren
  '/$tenantSlug/public/changelog': typeof TenantSlugPublicChangelogRoute
  '/$tenantSlug/public/roadmap': typeof TenantSlugPublicRoadmapRoute
  '/public/board/bugs': typeof PublicBoardBugsRoute
  '/public/board/features': typeof PublicBoardFeaturesRoute
  '/public/board/feedback': typeof PublicBoardFeedbackRoute
  '/$tenantSlug/admin/': typeof TenantSlugAdminIndexRoute
  '/$tenantSlug/public/': typeof TenantSlugPublicIndexRoute
  '/public/board/': typeof PublicBoardIndexRoute
  '/$tenantSlug/public/board/bugs': typeof TenantSlugPublicBoardBugsRoute
  '/$tenantSlug/public/board/features': typeof TenantSlugPublicBoardFeaturesRoute
  '/$tenantSlug/public/board/feedback': typeof TenantSlugPublicBoardFeedbackRoute
  '/$tenantSlug/public/board/': typeof TenantSlugPublicBoardIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/landing': typeof LandingRoute
  '/login': typeof LoginRoute
  '/onboarding': typeof OnboardingRoute
  '/orpc': typeof OrpcRoute
  '/public/changelog': typeof PublicChangelogRoute
  '/public/roadmap': typeof PublicRoadmapRoute
  '/$tenantSlug': typeof TenantSlugIndexRoute
  '/admin': typeof AdminIndexRoute
  '/public': typeof PublicIndexRoute
  '/$tenantSlug/public/changelog': typeof TenantSlugPublicChangelogRoute
  '/$tenantSlug/public/roadmap': typeof TenantSlugPublicRoadmapRoute
  '/public/board/bugs': typeof PublicBoardBugsRoute
  '/public/board/features': typeof PublicBoardFeaturesRoute
  '/public/board/feedback': typeof PublicBoardFeedbackRoute
  '/$tenantSlug/admin': typeof TenantSlugAdminIndexRoute
  '/$tenantSlug/public': typeof TenantSlugPublicIndexRoute
  '/public/board': typeof PublicBoardIndexRoute
  '/$tenantSlug/public/board/bugs': typeof TenantSlugPublicBoardBugsRoute
  '/$tenantSlug/public/board/features': typeof TenantSlugPublicBoardFeaturesRoute
  '/$tenantSlug/public/board/feedback': typeof TenantSlugPublicBoardFeedbackRoute
  '/$tenantSlug/public/board': typeof TenantSlugPublicBoardIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/$tenantSlug': typeof TenantSlugRouteWithChildren
  '/admin': typeof AdminRouteWithChildren
  '/dashboard': typeof DashboardRoute
  '/landing': typeof LandingRoute
  '/login': typeof LoginRoute
  '/onboarding': typeof OnboardingRoute
  '/orpc': typeof OrpcRoute
  '/public': typeof PublicRouteWithChildren
  '/$tenantSlug/admin': typeof TenantSlugAdminRouteWithChildren
  '/$tenantSlug/public': typeof TenantSlugPublicRouteWithChildren
  '/public/board': typeof PublicBoardRouteWithChildren
  '/public/changelog': typeof PublicChangelogRoute
  '/public/roadmap': typeof PublicRoadmapRoute
  '/$tenantSlug/': typeof TenantSlugIndexRoute
  '/admin/': typeof AdminIndexRoute
  '/public/': typeof PublicIndexRoute
  '/$tenantSlug/public/board': typeof TenantSlugPublicBoardRouteWithChildren
  '/$tenantSlug/public/changelog': typeof TenantSlugPublicChangelogRoute
  '/$tenantSlug/public/roadmap': typeof TenantSlugPublicRoadmapRoute
  '/public/board/bugs': typeof PublicBoardBugsRoute
  '/public/board/features': typeof PublicBoardFeaturesRoute
  '/public/board/feedback': typeof PublicBoardFeedbackRoute
  '/$tenantSlug/admin/': typeof TenantSlugAdminIndexRoute
  '/$tenantSlug/public/': typeof TenantSlugPublicIndexRoute
  '/public/board/': typeof PublicBoardIndexRoute
  '/$tenantSlug/public/board/bugs': typeof TenantSlugPublicBoardBugsRoute
  '/$tenantSlug/public/board/features': typeof TenantSlugPublicBoardFeaturesRoute
  '/$tenantSlug/public/board/feedback': typeof TenantSlugPublicBoardFeedbackRoute
  '/$tenantSlug/public/board/': typeof TenantSlugPublicBoardIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$tenantSlug'
    | '/admin'
    | '/dashboard'
    | '/landing'
    | '/login'
    | '/onboarding'
    | '/orpc'
    | '/public'
    | '/$tenantSlug/admin'
    | '/$tenantSlug/public'
    | '/public/board'
    | '/public/changelog'
    | '/public/roadmap'
    | '/$tenantSlug/'
    | '/admin/'
    | '/public/'
    | '/$tenantSlug/public/board'
    | '/$tenantSlug/public/changelog'
    | '/$tenantSlug/public/roadmap'
    | '/public/board/bugs'
    | '/public/board/features'
    | '/public/board/feedback'
    | '/$tenantSlug/admin/'
    | '/$tenantSlug/public/'
    | '/public/board/'
    | '/$tenantSlug/public/board/bugs'
    | '/$tenantSlug/public/board/features'
    | '/$tenantSlug/public/board/feedback'
    | '/$tenantSlug/public/board/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/landing'
    | '/login'
    | '/onboarding'
    | '/orpc'
    | '/public/changelog'
    | '/public/roadmap'
    | '/$tenantSlug'
    | '/admin'
    | '/public'
    | '/$tenantSlug/public/changelog'
    | '/$tenantSlug/public/roadmap'
    | '/public/board/bugs'
    | '/public/board/features'
    | '/public/board/feedback'
    | '/$tenantSlug/admin'
    | '/$tenantSlug/public'
    | '/public/board'
    | '/$tenantSlug/public/board/bugs'
    | '/$tenantSlug/public/board/features'
    | '/$tenantSlug/public/board/feedback'
    | '/$tenantSlug/public/board'
  id:
    | '__root__'
    | '/'
    | '/$tenantSlug'
    | '/admin'
    | '/dashboard'
    | '/landing'
    | '/login'
    | '/onboarding'
    | '/orpc'
    | '/public'
    | '/$tenantSlug/admin'
    | '/$tenantSlug/public'
    | '/public/board'
    | '/public/changelog'
    | '/public/roadmap'
    | '/$tenantSlug/'
    | '/admin/'
    | '/public/'
    | '/$tenantSlug/public/board'
    | '/$tenantSlug/public/changelog'
    | '/$tenantSlug/public/roadmap'
    | '/public/board/bugs'
    | '/public/board/features'
    | '/public/board/feedback'
    | '/$tenantSlug/admin/'
    | '/$tenantSlug/public/'
    | '/public/board/'
    | '/$tenantSlug/public/board/bugs'
    | '/$tenantSlug/public/board/features'
    | '/$tenantSlug/public/board/feedback'
    | '/$tenantSlug/public/board/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  TenantSlugRoute: typeof TenantSlugRouteWithChildren
  AdminRoute: typeof AdminRouteWithChildren
  DashboardRoute: typeof DashboardRoute
  LandingRoute: typeof LandingRoute
  LoginRoute: typeof LoginRoute
  OnboardingRoute: typeof OnboardingRoute
  OrpcRoute: typeof OrpcRoute
  PublicRoute: typeof PublicRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  TenantSlugRoute: TenantSlugRouteWithChildren,
  AdminRoute: AdminRouteWithChildren,
  DashboardRoute: DashboardRoute,
  LandingRoute: LandingRoute,
  LoginRoute: LoginRoute,
  OnboardingRoute: OnboardingRoute,
  OrpcRoute: OrpcRoute,
  PublicRoute: PublicRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/$tenantSlug",
        "/admin",
        "/dashboard",
        "/landing",
        "/login",
        "/onboarding",
        "/orpc",
        "/public"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/$tenantSlug": {
      "filePath": "$tenantSlug.tsx",
      "children": [
        "/$tenantSlug/admin",
        "/$tenantSlug/public",
        "/$tenantSlug/"
      ]
    },
    "/admin": {
      "filePath": "admin.tsx",
      "children": [
        "/admin/"
      ]
    },
    "/dashboard": {
      "filePath": "dashboard.tsx"
    },
    "/landing": {
      "filePath": "landing.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/onboarding": {
      "filePath": "onboarding.tsx"
    },
    "/orpc": {
      "filePath": "orpc.tsx"
    },
    "/public": {
      "filePath": "public.tsx",
      "children": [
        "/public/board",
        "/public/changelog",
        "/public/roadmap",
        "/public/"
      ]
    },
    "/$tenantSlug/admin": {
      "filePath": "$tenantSlug/admin.tsx",
      "parent": "/$tenantSlug",
      "children": [
        "/$tenantSlug/admin/"
      ]
    },
    "/$tenantSlug/public": {
      "filePath": "$tenantSlug/public.tsx",
      "parent": "/$tenantSlug",
      "children": [
        "/$tenantSlug/public/board",
        "/$tenantSlug/public/changelog",
        "/$tenantSlug/public/roadmap",
        "/$tenantSlug/public/"
      ]
    },
    "/public/board": {
      "filePath": "public/board.tsx",
      "parent": "/public",
      "children": [
        "/public/board/bugs",
        "/public/board/features",
        "/public/board/feedback",
        "/public/board/"
      ]
    },
    "/public/changelog": {
      "filePath": "public/changelog.tsx",
      "parent": "/public"
    },
    "/public/roadmap": {
      "filePath": "public/roadmap.tsx",
      "parent": "/public"
    },
    "/$tenantSlug/": {
      "filePath": "$tenantSlug/index.tsx",
      "parent": "/$tenantSlug"
    },
    "/admin/": {
      "filePath": "admin/index.tsx",
      "parent": "/admin"
    },
    "/public/": {
      "filePath": "public/index.tsx",
      "parent": "/public"
    },
    "/$tenantSlug/public/board": {
      "filePath": "$tenantSlug/public/board.tsx",
      "parent": "/$tenantSlug/public",
      "children": [
        "/$tenantSlug/public/board/bugs",
        "/$tenantSlug/public/board/features",
        "/$tenantSlug/public/board/feedback",
        "/$tenantSlug/public/board/"
      ]
    },
    "/$tenantSlug/public/changelog": {
      "filePath": "$tenantSlug/public/changelog.tsx",
      "parent": "/$tenantSlug/public"
    },
    "/$tenantSlug/public/roadmap": {
      "filePath": "$tenantSlug/public/roadmap.tsx",
      "parent": "/$tenantSlug/public"
    },
    "/public/board/bugs": {
      "filePath": "public/board/bugs.tsx",
      "parent": "/public/board"
    },
    "/public/board/features": {
      "filePath": "public/board/features.tsx",
      "parent": "/public/board"
    },
    "/public/board/feedback": {
      "filePath": "public/board/feedback.tsx",
      "parent": "/public/board"
    },
    "/$tenantSlug/admin/": {
      "filePath": "$tenantSlug/admin/index.tsx",
      "parent": "/$tenantSlug/admin"
    },
    "/$tenantSlug/public/": {
      "filePath": "$tenantSlug/public/index.tsx",
      "parent": "/$tenantSlug/public"
    },
    "/public/board/": {
      "filePath": "public/board/index.tsx",
      "parent": "/public/board"
    },
    "/$tenantSlug/public/board/bugs": {
      "filePath": "$tenantSlug/public/board/bugs.tsx",
      "parent": "/$tenantSlug/public/board"
    },
    "/$tenantSlug/public/board/features": {
      "filePath": "$tenantSlug/public/board/features.tsx",
      "parent": "/$tenantSlug/public/board"
    },
    "/$tenantSlug/public/board/feedback": {
      "filePath": "$tenantSlug/public/board/feedback.tsx",
      "parent": "/$tenantSlug/public/board"
    },
    "/$tenantSlug/public/board/": {
      "filePath": "$tenantSlug/public/board/index.tsx",
      "parent": "/$tenantSlug/public/board"
    }
  }
}
ROUTE_MANIFEST_END */
